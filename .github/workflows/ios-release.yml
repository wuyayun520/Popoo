name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/popoo.ipa"
          APPLE_ID: "zhuoweikun@abcomptoirdu.shop"
          APP_SPECIFIC_PASSWORD: "jfcb-fsqp-onrv-licr"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
